# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle 

on:
  push:
    branches: [ "develop" ]
 # pull_request:
 #   branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    # jdk 설정
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Set YML
      run: |
        echo "copy yml"
        echo "${{ secrets.BOOTSTRAP }}" | base64 --decode > ./deal/src/main/resources/bootstrap.yml
    # gradle 권한 부여
    - name: Grant execute permission form gradlew
      run: |
        cd deal/
        chmod +x gradlew
    # gradle build
    - name: Build with Gradle Deal
     # uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
     # with:
       # arguments: build
      run: |
        cd deal/
        ./gradlew build -x test
    # image build 및 docker hub에 push
    - name: web docker build and push
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        cd deal/
        docker build --tag ${{ secrets.DOCKER_USERNAME }}/deal-service:1.0 .
        docker push ${{ secrets.DOCKER_USERNAME }}/deal-service:1.0
    - name: docker logout
      run: docker logout
    # deploy
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.KEY }}
        script: |
          sudo docker stop deal-service
          sudo docker rm deal-service
          sudo docker rmi -f ${{ secrets.DOCKER_USERNAME }}/deal-service:1.0
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/deal-service:1.0
          sudo docker run -d --network nuguri-network -e "spring.config.import=optional:configserver:http://172.31.1.25:8888" -e "eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka/" -e "spring.zipkin.base-url=http://zipkin:9411" --name deal-service ${{ secrets.DOCKER_USERNAME }}/deal-service:1.0
          
